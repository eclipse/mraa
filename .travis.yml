dist: trusty
sudo: required

language: cpp

compiler:
  - clang
  - gcc

env:
  - TARGET=doc
  - TARGET=python2
  - TARGET=python3
  - TARGET=java
  - TARGET=node4
  - TARGET=node5
  - TARGET=android
  - TARGET=sonar-scan
  - JSONPLAT=ON TARGET=python2
  - JSONPLAT=ON TARGET=python3
  - JSONPLAT=ON TARGET=java
  - JSONPLAT=ON TARGET=node4
  - JSONPLAT=ON TARGET=node5
  - BUILDARCH=MOCK TARGET=python2
  - BUILDARCH=MOCK TARGET=python3
  - BUILDARCH=MOCK TARGET=java
  - BUILDARCH=MOCK TARGET=node4
  - BUILDARCH=MOCK TARGET=node5

matrix:
  exclude:
    - compiler: clang
      env: TARGET=java
    - compiler: clang
      env: JSONPLAT=ON TARGET=java
    - compiler: clang
      env: BUILDARCH=MOCK TARGET=java
    - compiler: gcc
      env: TARGET=android
    - compiler: clang
      env: TARGET=sonar-scan
  allow_failures:
    - compiler: gcc
      env: JSONPLAT=ON TARGET=node4
    - compiler: clang
      env: JSONPLAT=ON TARGET=node4
    - compiler: gcc
      env: JSONPLAT=ON TARGET=node5
    - compiler: clang
      env: JSONPLAT=ON TARGET=node5
    - compiler: gcc
      env: TARGET=sonar-scan

services:
  - docker

before_install:
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/1.9.0/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

before_script:
  - if [ "$CC" == "gcc" ]; then export CC=gcc-4.8; fi
  - if [ "$CXX" == "g++" ]; then export CXX=g++-4.8; fi
  - if [ "$CC" == "clang" ]; then export CC=clang-3.8; fi
  - if [ "$CXX" == "clang++" ]; then export CXX=clang++-3.8; fi
  - docker-compose build base
  - if [ "$TARGET" == "android" ]; then docker-compose build java; fi
  - docker-compose build ${TARGET}

script:
  - docker-compose run ${TARGET}
